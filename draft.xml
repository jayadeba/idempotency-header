<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.15 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-idempotency-header-00" category="std">

  <front>
    <title>The Idempotency HTTP Header Field</title>

    <author initials="J." surname="Jena" fullname="Jayadeba Jena">
      <organization></organization>
      <address>
        <email>jjena@paypal.com</email>
        <uri>https://github.com/jayadeba</uri>
      </address>
    </author>
    <author initials="S." surname="Dalal" fullname="Sanjay Dalal">
      <organization></organization>
      <address>
        <email>sanjay.dalal@cal.berkeley.edu</email>
        <uri>https://github.com/sdatspun2</uri>
      </address>
    </author>

    <date year="2020" month="November" day="12"/>

    
    
    

    <abstract>


<t>The <spanx style="verb">HTTP</spanx> Idempotency request header field can be used to carry idempotency key in order to make non-idempotent <spanx style="verb">HTTP</spanx> methods such as <spanx style="verb">POST</spanx> or <spanx style="verb">PATCH</spanx> fault-tolerant.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Idempotence is the property of certain operations in mathematics and computer science whereby they can be applied multiple times without changing the result beyond the initial application. It does not matter if the operation is called only once, or 10s of times over. The result <spanx style="verb">SHOULD</spanx> be the same.</t>

<t>Idempotency is important in building a fault-tolerant <spanx style="verb">HTTP API</spanx>. An <spanx style="verb">HTTP</spanx> request method is considered <spanx style="verb">idempotent</spanx> if the intended effect on the server of multiple identical requests with that method is the same as the effect for a single such request. <xref target="RFC7231"/> defines methods <spanx style="verb">OPTIONS</spanx>, <spanx style="verb">HEAD</spanx>, <spanx style="verb">GET</spanx>, <spanx style="verb">PUT</spanx> and <spanx style="verb">DELETE</spanx> as idempotent. However, <spanx style="verb">POST</spanx> and <spanx style="verb">PATCH</spanx> methods are <spanx style="verb">NOT</spanx> idempotent.</t>

<t>Suppose a client on <spanx style="verb">HTTP API</spanx> wants to create or update a resource using <spanx style="verb">POST</spanx> method. Since <spanx style="verb">POST</spanx> is <spanx style="verb">NOT</spanx> an idempotent method, calling it multiple times can result in duplication or wrong updates. What would happen if you sent out the POST request to the server, but you get a timeout? Is the resource actually created or updated? Does the timeout happened during sending of the request to the server, or while receiving the response on the client? Can we safely retry again, or do we need to figure out first what has happened with the resource? If <spanx style="verb">POST</spanx> was an idempotent method, we would not have to answer such questions. We could safely resend a request until we actually get a response back from the server.</t>

<t>For many use cases in <spanx style="verb">HTTP API</spanx>, creation of duplicate records is a severe problem from business perspective. For example, in Fintech industry, duplicate records for requests involving any kind of payment transaction on a financial account <spanx style="verb">MUST NOT</spanx> be allowed. In other cases, processing of duplicate webhooks due to retries is not warranted.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the Augmented Backus-Naur Form (ABNF) notation of <xref target="RFC5234"/> and includes, by reference, the IMF-fixdate rule as defined in Section 7.1.1.1 of <xref target="RFC7231"/>.</t>

<t>The term “resource” is to be interpreted as defined in Section 2 of <xref target="RFC7231"/>, that is identified by an URI.</t>

</section>
</section>
<section anchor="the-idempotency-http-request-header-field" title="The Idempotency HTTP Request Header Field">

<t>An idempotency key is a unique value generated by the client which the resource server uses to recognize subsequent retries of the same request. The <spanx style="verb">Idempotency-Key</spanx> HTTP request header field carries this key.</t>

<section anchor="syntax" title="Syntax">

<t>The <spanx style="verb">Idempotency-Key</spanx> request header field describes</t>

<figure><artwork><![CDATA[
Idempotency-Key       = idempotency-key-value

idempotency-key-value = opaque-value
opaque-value          = DQUOTE *idempotencyvalue DQUOTE
idempotencyvalue      = %x21 / %x23-7E / obs-text
       ; VCHAR except double quotes, plus obs-text
]]></artwork></figure>

<t>Clients MUST NOT include more than one <spanx style="verb">Idempotency-Key</spanx> header field in the same request.</t>

<t>The following example shows an idempotency key using UUID version 4 scheme:</t>

<figure><artwork><![CDATA[
Idempotency-Key: "8e03978e-40d5-43e8-bc93-6894a57f9324"
]]></artwork></figure>

</section>
<section anchor="uniqueness-of-idempotency-key" title="Uniqueness of Idempotency Key">

<t>The idempotency key that is supplied as part of every <spanx style="verb">POST</spanx> request MUST be unique and can not be reused with another request with a different request payload.</t>

<t>How to make the key unique is up to the client and it’s agreed protocol with the resource owner. It is <spanx style="verb">RECOMMENDED</spanx> that <spanx style="verb">UUID</spanx> or a similar random identifier be used as the idempotency key.</t>

</section>
<section anchor="idempotency-key-validity-and-expiry" title="Idempotency Key Validity and Expiry">

<t>The resource MAY enforce a time based idempotency keys, thus, be able to purge or delete a key upon its expiry. The resource server SHOULD publish expiration policy related documentation.</t>

</section>
<section anchor="idempotency-fingerprint" title="Idempotency Fingerprint">

<t>An idempotency fingerprint MAY be used in conjunction with with an idempotency key to determine the uniqueness of a request and is generated from request payload data. An idempotency fingerprint is generated by the resource implementation. Idempotency Fingerprint generation algorithm MAY use one of the following or similar approaches to generate a fingerprint.</t>

<t><list style="symbols">
  <t>Checksum of the entire request payload.</t>
  <t>Checksum of selected elements in the request payload.</t>
  <t>Field value match for each field in the request payload.</t>
  <t>Field value match for selected elements in the request payload.</t>
  <t>Request digest/signature.</t>
</list></t>

</section>
<section anchor="idempotency-enforcement-scenarios" title="Idempotency Enforcement Scenarios">

<t><list style="symbols">
  <t>First time request (Idempotency Key and Idempotency Fingerprint scenarios has not been seen)  <vspace blankLines='1'/>
The resource server SHOULD process the request normally and respond with an appropriate response and status code.</t>
  <t>Duplicate request (Idempotency Key and Idempotency Fingerprint scenarios has been seen)  <vspace blankLines='1'/>
Replay  <vspace blankLines='1'/>
The request was replayed after the original request completed. The resource server MUST respond with the result of the previously completed operation, success or an error.  <vspace blankLines='1'/>
Concurrent Request  <vspace blankLines='1'/>
The request was replayed before the original request completed. The resource server MUST respond with a resource conflict error. See ## Error Scenarios for details.</t>
</list></t>

</section>
<section anchor="responsibilities" title="Responsibilities">

<t>Client</t>

<t>For the idempotent resource operations, the client MUST present a unique idempotency key in Idempotency-Key request header field.</t>

<t>Resource Server</t>

<t><list style="symbols">
  <t>Generate Idempotency Fingerprint when required.</t>
  <t>Check for idempotency under various scenarios including the ones described earlier.</t>
  <t>Manage the lifecycle of the Idempotency Key.</t>
  <t>Publish idempotency related specification in relevant documentation.</t>
</list></t>

</section>
<section anchor="error-scenarios" title="Error Scenarios">

<t>If the <spanx style="verb">Idempotency-Key</spanx> request header is missing for a documented idempotent operation requiring this header, the resource server MUST reply with an <spanx style="verb">HTTP</spanx> <spanx style="verb">400</spanx> status code with body containing a link pointing to the relevant documentation. Alternately, using the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx>, client could be informed about the error too as shown below.</t>

<figure><artwork><![CDATA[
HTTP/1.1 400 Bad Request
Link: <https://developer.example.com/idempotency>;
  rel="describedby"; type="text/html"
]]></artwork></figure>

<t>If there is an attempt to reuse an idempotency key with a different request payload, the resource server MUST reply with an <spanx style="verb">HTTP</spanx> <spanx style="verb">422</spanx> status code with body containing a link pointing to the relevant documentation. Using the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx>, client could be informed about the error as following.</t>

<figure><artwork><![CDATA[
HTTP/1.1 422 Unprocessable Entity
Link: <https://developer.example.com/idempotency>;
rel="describedby"; type="text/html"
]]></artwork></figure>

<t>If there is an attempt to reuse an idempotency key that is expired, the resource server MUST reply with an <spanx style="verb">HTTP</spanx> <spanx style="verb">422</spanx> status code with body containing a link pointing to the relevant documentation. Using the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx>, client could be informed about the error as following.</t>

<figure><artwork><![CDATA[
HTTP/1.1 422 Unprocessable Entity
Link: <https://developer.example.com/idempotency>;
rel="describedby"; type="text/html"
]]></artwork></figure>

<t>If the request is replayed, while the original request is still processing, the resource server MUST reply with an <spanx style="verb">HTTP</spanx> <spanx style="verb">409</spanx> status code with body containing a link pointing to the relevant documentation. Using the <spanx style="verb">HTTP</spanx> header <spanx style="verb">Link</spanx>, client could be informed about the error as following.</t>

<figure><artwork><![CDATA[
HTTP/1.1 409 Conflict
Link: <https://developer.example.com/idempotency>;
rel="describedby"; type="text/html"
]]></artwork></figure>

<t>For other errors, the resource MUST return the appropriate status code and error message.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="the-idempotency-key-http-request-header-field" title="The Idempotency-Key HTTP Request Header Field">

<t>The <spanx style="verb">Idempotency-Key</spanx> request header should be added to the permanent registry of message header fields (see <xref target="RFC3864"/>), taking into account the guidelines given by HTTP/1.1 <xref target="RFC7231"/>.</t>

<figure><artwork><![CDATA[
Header Field Name: Idempotency-Key

Applicable Protocol: Hypertext Transfer Protocol (HTTP)

Status: Standard

Author: Jayadeba Jena, <jjena@paypal.com>
        Sanjay Dalal <sanjay.dalal@cal.berkeley.edu>

Change controller: IETF

Specification document: this specification,
            Section 2 "The Idempotency HTTP Request Header Field"
]]></artwork></figure>

</section>
</section>
<section anchor="implementation-status" title="Implementation Status">

<t>Note to RFC Editor: Please remove this section before publication.</t>

<t>This section records the status of known implementations of the protocol defined by this specification at the time of posting of this Internet-Draft, and is based on a proposal described in <xref target="RFC7942"/>.  The description of implementations in this section is intended to assist the IETF in its decision processes in progressing drafts to RFCs.  Please note that the listing of any individual implementation here does not imply endorsement by the IETF. Furthermore, no effort has been spent to verify the information presented here that was supplied by IETF contributors.  This is not intended as, and must not be construed to be, a catalog of available implementations or their features.  Readers are advised to note that
other implementations may exist.</t>

<t>According to RFC 7942, “this will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature. It is up to the individual working groups to use this information as they see fit”.</t>

<t>Organization: Stripe</t>

<t><list style="symbols">
  <t>Description: Stripe uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference:  https://stripe.com/docs/idempotency</t>
</list></t>

<t>Organization: Adyen</t>

<t><list style="symbols">
  <t>Description: Adyen uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://docs.adyen.com/development-resources/api-idempotency/</t>
</list></t>

<t>Organization: Dwolla</t>

<t><list style="symbols">
  <t>Description: Dwolla uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://docs.dwolla.com/</t>
</list></t>

<t>Organization: Interledger</t>

<t><list style="symbols">
  <t>Description: Interledger uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://github.com/interledger/</t>
</list></t>

<t>Organization: WorldPay</t>

<t><list style="symbols">
  <t>Description: WorldPay uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://developer.worldpay.com/docs/wpg/idempotency</t>
</list></t>

<t>Organization: Yandex</t>

<t><list style="symbols">
  <t>Description: Yandex uses custom HTTP header named <spanx style="verb">Idempotency-Key</spanx></t>
  <t>Reference: https://cloud.yandex.com/docs/api-design-guide/concepts/idempotency</t>
</list></t>

<section anchor="implementing-the-concept" title="Implementing the Concept">

<t>This is a list of implementations that implement the general concept, but do so using different mechanisms:</t>

<t>Organization: Django</t>

<t><list style="symbols">
  <t>Description: Django uses custom HTTP header named <spanx style="verb">HTTP_IDEMPOTENCY_KEY</spanx></t>
  <t>Reference:  https://pypi.org/project/django-idempotency-key</t>
</list></t>

<t>Organization: PayPal</t>

<t><list style="symbols">
  <t>Description: PayPal uses custom HTTP header named <spanx style="verb">PayPal-Request-Id</spanx></t>
  <t>Reference:  https://developer.paypal.com/docs/business/develop/idempotency</t>
</list></t>

<t>Organization: RazorPay</t>

<t><list style="symbols">
  <t>Description: PayPal uses custom HTTP header named <spanx style="verb">X-Payout-Idempotency</spanx></t>
  <t>Reference: https://razorpay.com/docs/razorpayx/api/idempotency/</t>
</list></t>

<t>Organization: Twilio</t>

<t><list style="symbols">
  <t>Description: Twilio uses custom HTTP header named <spanx style="verb">I-Twilio-Idempotency-Token</spanx> in webhooks</t>
  <t>Reference: https://www.twilio.com/docs/usage/webhooks/webhooks-connection-overrides</t>
</list></t>

<t>Organization: OpenBanking</t>

<t><list style="symbols">
  <t>Description: OpenBanking using custom HTTP header called <spanx style="verb">x-idempotency-key</spanx></t>
  <t>Reference: https://openbankinguk.github.io/read-write-api-site3/v3.1.6/profiles/read-write-data-api-profile.html#request-headers</t>
</list></t>

<t>Organization: Square</t>

<t><list style="symbols">
  <t>Description: To make an idempotent API call, Square recommends adding a property named <spanx style="verb">idempotency_key</spanx> with a unique value in the request body.</t>
  <t>Reference: https://developer.squareup.com/docs/build-basics/using-rest-api</t>
</list></t>

<t>Organization: Google Standard Payments</t>

<t><list style="symbols">
  <t>Description: Google Standard Payments API uses a property named <spanx style="verb">requestId</spanx> in request body in order to provider idempotency in various use cases.</t>
  <t>Reference: https://developers.google.com/standard-payments/payment-processor-service-api/rest/v1/TopLevel/capture</t>
</list></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>This section is meant to inform developers, information providers,
and users of known security concerns specific to the idempotency keys.</t>

<t>For idempotent request handling, the resources MAY make use of the value in the idempotency key to look up the idempotent request cache such as a persistent store, for duplicate requests, matching the key. If the resource does not validate the value of the idempotency key, prior to performing the lookup, it MAY lead to various forms of security attacks, compromising itself. To avoid such situations, the resource SHOULD publish the expected format of the idempotency key  and always validate the value as per the published specification for the key, before processing the request.</t>

</section>
<section anchor="examples" title="Examples">

<t>The first example shows an idempotency-key header field with key value using UUID version 4 scheme:</t>

<figure><artwork><![CDATA[
Idempotency-Key: "8e03978e-40d5-43e8-bc93-6894a57f9324"
]]></artwork></figure>

<t>Second example shows an idempotency-key header field with key value using some random string generator:</t>

<figure><artwork><![CDATA[
Idempotency-Key: "clkyoesmbgybucifusbbtdsbohtyuuwz"
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC5234" target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker' role='editor'><organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'><organization /></author>
<date year='2008' month='January' />
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference  anchor="RFC3864" target='https://www.rfc-editor.org/info/rfc3864'>
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
<seriesInfo name='DOI' value='10.17487/RFC3864'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7942" target='https://www.rfc-editor.org/info/rfc7942'>
<front>
<title>Improving Awareness of Running Code: The Implementation Status Section</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='A.' surname='Farrel' fullname='A. Farrel'><organization /></author>
<date year='2016' month='July' />
<abstract><t>This document describes a simple process that allows authors of Internet-Drafts to record the status of known implementations by including an Implementation Status section.  This will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature.</t><t>This process is not mandatory.  Authors of Internet-Drafts are encouraged to consider using the process for their documents, and working groups are invited to think about applying the process to all of their protocol specifications.  This document obsoletes RFC 6982, advancing it to a Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='205'/>
<seriesInfo name='RFC' value='7942'/>
<seriesInfo name='DOI' value='10.17487/RFC7942'/>
</reference>




    </references>


<section anchor="acknowledgments" title="Acknowledgments">

<t>The authors would like to thank Mark Nottingham for his support for this Internet Draft. We would like to acknowledge that this draft is inspired by Idempotency related patterns described in API documentation of <eref target="https://github.com/paypal/api-standards/blob/master/patterns.md#idempotency">PayPal</eref> and <eref target="https://stripe.com/docs/idempotency">Stripe</eref> as well as Internet Draft on <eref target="https://tools.ietf.org/html/draft-nottingham-http-poe-00">POST Once Exactly</eref> authored by Mark Nottingham.</t>

<t>The authors take all responsibility for errors and omissions.</t>

</section>
<section anchor="appendix" title="Appendix">

<section anchor="appendix-a-imported-abnf" title="Appendix A.  Imported ABNF">

<t>The following core rules are included by reference, as defined in Appendix B.1 of <xref target="RFC5234"></xref>: ALPHA (letters), CR (carriage return), CRLF (CR LF), CTL (controls), DIGIT (decimal 0-9), DQUOTE (double quote), HEXDIG (hexadecimal 0-9/A-F/a-f), LF (line feed), OCTET (any 8-bit sequence of data), SP (space), and VCHAR (any visible US-ASCII character).</t>

<t>The rules below are defined in <xref target="RFC7230"/>:</t>

<figure><artwork><![CDATA[
 obs-text      = <obs-text, see [RFC7230], Section 3.2.6>
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

